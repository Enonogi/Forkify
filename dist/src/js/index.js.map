{"version":3,"sources":["../../../src/js/index.js"],"names":["searchViews","recipeViews","state","controlSearch","query","getInput","search","Search","clearInput","clearResults","elements","searchResults","getResults","console","log","renderResults","result","alert","searchForm","addEventListener","e","preventDefault","searchResultPages","btn","target","closest","goToPage","parseInt","dataset","goto","controlRecipe","id","window","location","hash","replace","clearRecipe","recipe","highlightSelected","Recipe","getRecipe","parseIngredients","calcTime","calcServings","renderRecipe","forEach","event"],"mappings":";;AAAA;;;;AACA;;;;AACA;;IAAYA,W;;AACZ;;IAAYC,W;;AACZ;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,QAAQ,EAAd;;AAEA;;;AAGA,IAAMC;AAAA,qEAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACMC,iBAFc,GAENJ,YAAYK,QAAZ,EAFM,EAEkB;;AAFlB,iBAIhBD,KAJgB;AAAA;AAAA;AAAA;;AAKlB;AACAF,kBAAMI,MAAN,GAAe,IAAIC,gBAAJ,CAAWH,KAAX,CAAf;;AAEA;AACAJ,wBAAYQ,UAAZ,GATkB,CASQ;AAC1BR,wBAAYS,YAAZ,GAVkB,CAUU;AAC5B,oCAAaC,eAASC,aAAtB,EAXkB,CAWoB;;AAXpB;AAAA;AAAA,mBAcVT,MAAMI,MAAN,CAAaM,UAAb,EAdU;;AAAA;AAciB;AACjCC,oBAAQC,GAAR,CAAY,wBAAZ;;AAEA;AACA,qCAlBgB,CAkBD;AACfd,wBAAYe,aAAZ,CAA0Bb,MAAMI,MAAN,CAAaU,MAAvC,EAnBgB,CAmBgC;AAnBhC;AAAA;;AAAA;AAAA;AAAA;;AAsBhBC,kBAAM,yCAAN;AACA;;AAvBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AA6BAP,eAASQ,UAAT,CAAoBC,gBAApB,CAAqC,QAArC,EAA+C,aAAK;AAAE;AACpDC,IAAEC,cAAF,GADkD,CAC9B;AACpBlB;AACD,CAHD;;AAKAO,eAASY,iBAAT,CAA2BH,gBAA3B,CAA4C,OAA5C,EAAqD,aAAK;AACxD,MAAMI,MAAMH,EAAEI,MAAF,CAASC,OAAT,CAAiB,aAAjB,CAAZ;AACA,MAAIF,GAAJ,EAAS;AACP,QAAMG,WAAWC,SAASJ,IAAIK,OAAJ,CAAYC,IAArB,EAA2B,EAA3B,CAAjB;AACA7B,gBAAYS,YAAZ;AACAT,gBAAYe,aAAZ,CAA0Bb,MAAMI,MAAN,CAAaU,MAAvC,EAA+CU,QAA/C;AACD;AACF,CAPD;;AAUA;;;;AAIA,IAAMI;AAAA,sEAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cADc,GACTC,OAAOC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,GAA7B,EAAkC,EAAlC,CADS;;AAGpB;;AACAlC,wBAAYmC,WAAZ;AACA,oCAAa1B,eAAS2B,MAAtB;AACA,gBAAInC,MAAMI,MAAV,EAAkB;AAChBL,0BAAYqC,iBAAZ,CAA8BP,EAA9B;AACD;;AAED;AACA7B,kBAAMmC,MAAN,GAAe,IAAIE,gBAAJ,CAAWR,EAAX,CAAf;;AAXoB;AAAA;AAAA,mBAeZ7B,MAAMmC,MAAN,CAAaG,SAAb,EAfY;;AAAA;AAgBlBtC,kBAAMmC,MAAN,CAAaI,gBAAb;;AAGA;AACAvC,kBAAMmC,MAAN,CAAaK,QAAb;AACAxC,kBAAMmC,MAAN,CAAaM,YAAb;;AAEA;AACA;AACA1C,wBAAY2C,YAAZ,CAAyB1C,MAAMmC,MAA/B;AAzBkB;AAAA;;AAAA;AAAA;AAAA;;AA4BlBpB,kBAAM,wCAAN;;AA5BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAgCA,CAAC,YAAD,EAAe,MAAf,EAAuB4B,OAAvB,CAA+B;AAAA,SAASb,OAAOb,gBAAP,CAAwB2B,KAAxB,EAA+BhB,aAA/B,CAAT;AAAA,CAA/B;;AAEA","file":"index.js","sourcesContent":["import Search from './models/Search';\r\nimport Recipe from './models/Recipe';\r\nimport * as searchViews from './views/searchView';\r\nimport * as recipeViews from './views/recipeViews';\r\nimport {elements, renderLoader, clearLoader} from './views/base';\r\n\r\n// ***GLOBAL STATE***\r\n// - Search object\r\n// - Current recipie object\r\n// - Shopping list object\r\n// - Linked recipies\r\n\r\nconst state = {};\r\n\r\n/**\r\n* Search controler\r\n*/\r\nconst controlSearch = async () => {\r\n  // 1. Get query from view\r\n  const query = searchViews.getInput(); //todo\r\n\r\n  if (query) {\r\n    // 2. Create new search object and add it to state\r\n    state.search = new Search(query);\r\n\r\n    // 3. Prepare UI for results - loading spinner\r\n    searchViews.clearInput(); //izpraznemo search field\r\n    searchViews.clearResults(); //izbrišemo vsebino ul-ja\r\n    renderLoader(elements.searchResults); //naložimo lader svg\r\n\r\n    try { // 4. Search for recipies\r\n      await state.search.getResults(); //potegnemo recepte\r\n      console.log('Downolading recipes...');\r\n\r\n      // 5. Render results on UI\r\n      clearLoader(); // odmaknemo loader\r\n      searchViews.renderResults(state.search.result); //dodamo recepte v html\r\n    }\r\n    catch (e) {\r\n      alert('Something went wrong with the search...');\r\n      clearLoader();\r\n    }\r\n  }\r\n\r\n};\r\n\r\nelements.searchForm.addEventListener('submit', e => { //event listner na search formi\r\n  e.preventDefault(); //preprečimo, da se stran ponovno naloži\r\n  controlSearch();\r\n});\r\n\r\nelements.searchResultPages.addEventListener('click', e => {\r\n  const btn = e.target.closest('.btn-inline');\r\n  if (btn) {\r\n    const goToPage = parseInt(btn.dataset.goto, 10);\r\n    searchViews.clearResults();\r\n    searchViews.renderResults(state.search.result, goToPage);\r\n  }\r\n});\r\n\r\n\r\n/**\r\n* Recipe controler\r\n*/\r\n\r\nconst controlRecipe = async () => {\r\n  const id = window.location.hash.replace('#', '');\r\n\r\n  //1. Prepere UI for changes\r\n  recipeViews.clearRecipe();\r\n  renderLoader(elements.recipe);\r\n  if (state.search) {\r\n    recipeViews.highlightSelected(id);\r\n  }\r\n\r\n  //2. Create new recipe object and add it to the state\r\n  state.recipe = new Recipe(id);\r\n\r\n  try {\r\n    //3. Get recpie data and parse ingredients\r\n    await state.recipe.getRecipe();\r\n    state.recipe.parseIngredients();\r\n\r\n\r\n    //4. Calculate servings and time\r\n    state.recipe.calcTime();\r\n    state.recipe.calcServings();\r\n\r\n    //5. Render recipe\r\n    clearLoader();\r\n    recipeViews.renderRecipe(state.recipe);\r\n  }\r\n  catch (e) {\r\n    alert('Error processing recipe' + e);\r\n  }\r\n};\r\n\r\n['hashchange', 'load'].forEach(event => window.addEventListener(event, controlRecipe));\r\n\r\n//Handling recipe button click\r\n"]}